<UserControl x:Class="CMG.UI.View.PolicyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:behaviors="clr-namespace:WPFTextBoxAutoComplete;assembly=WPFTextBoxAutoComplete"
             xmlns:template="clr-namespace:CMG.UI.TemplateSelector"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             xmlns:converters="clr-namespace:CMG.UI.Converter" 
             xmlns:uc="clr-namespace:CMG.UI.Controls">
    <UserControl.Resources>
        <DataTemplate x:Key="commonNameTemplate">
            <WrapPanel AllowDrop="True" Orientation="Vertical">
                <TextBlock Text="{Binding ColumnName}" Margin="10 5 0 0" FontSize="13" Foreground="#FFCEEAFF"></TextBlock>
                <TextBox Margin="10 0 15 5" BorderBrush="#FFCEEAFF" BorderThickness="0 0 0 3" 
                                     Foreground="White" FontSize="14"
                                     Text="{Binding DataContext.CommanName, RelativeSource={RelativeSource AncestorType=Window}}"  Width="85"></TextBox>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="lastNameTemplate">
            <WrapPanel AllowDrop="True" Orientation="Vertical">
                <TextBlock Text="Last Name" Margin="10 5 0 0" FontSize="13" Foreground="#FFCEEAFF"></TextBlock>
                <TextBox Margin="10 0 15 5" BorderBrush="#FFCEEAFF" BorderThickness="0 0 0 3" 
                                     Foreground="White" FontSize="14" 
                                     Text="{Binding DataContext.LastName, RelativeSource={RelativeSource AncestorType=Window}}" Width="85"></TextBox>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="firstNameTemplate">
            <WrapPanel AllowDrop="True" Orientation="Vertical">
                <TextBlock Text="First Name" Margin="10 5 0 0" FontSize="13" Foreground="#FFCEEAFF"></TextBlock>
                <TextBox Margin="10 0 15 5" BorderBrush="#FFCEEAFF" BorderThickness="0 0 0 3" 
                                     Foreground="White" FontSize="14"  
                                     Text="{Binding DataContext.FirstName, RelativeSource={RelativeSource AncestorType=Window}}" MinWidth="85"></TextBox>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="entityTypeTemplate">
            <WrapPanel AllowDrop="True" Orientation="Vertical" x:Name="EntityTypePanel" Loaded="EntityTypePanel_Loaded">
                <TextBlock Text="{Binding ColumnName}" Margin="10 5 0 0" FontSize="13" Foreground="#FFCEEAFF"></TextBlock>
                <uc:AutoCompleteBox 
                                x:Name="UserControlEntityType" 
                                Foreground="White" 
                                BorderBrush="#FFCEEAFF" 
                                BorderThickness="0 0 0 3" 
                                Margin="10 0 15 5" 
                                Width="85"
                                AutoSuggestionList="{Binding DataContext.EntityTypes, RelativeSource={RelativeSource AncestorType=Window}}" 
                                SelectedValue="{Binding DataContext.EntityType, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=Window}}">
                </uc:AutoCompleteBox>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="policyNumberTemplate" x:Name="policyNumberTemplate">
            <WrapPanel AllowDrop="True" Orientation="Vertical" Loaded="PolicyNumberPanel_Loaded">
                <TextBlock Text="Policy #" Margin="10 5 0 0" FontSize="13" Foreground="#FFCEEAFF"></TextBlock>
                <uc:AutoCompleteBox 
                                x:Name="UserControlPolicyNumber" 
                                Foreground="White" 
                                BorderBrush="#FFCEEAFF" 
                                BorderThickness="0 0 0 3" 
                                Margin="10 0 15 0" 
                                Width="85"
                                AutoSuggestionList="{Binding DataContext.Policies, RelativeSource={RelativeSource AncestorType=Window}}" 
                                SelectedValue="{Binding DataContext.PolicyNumber, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=Window}}">
                </uc:AutoCompleteBox>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="companyNameTemplate">
            <WrapPanel AllowDrop="True" Orientation="Vertical" Loaded="CompanyNamePanel_Loaded">
                <TextBlock Text="Company" Margin="10 5 0 0" FontSize="13" Foreground="#FFCEEAFF"></TextBlock>
                <uc:AutoCompleteBox 
                                AutoSuggestionList="{Binding DataContext.CompanyNames, RelativeSource={RelativeSource AncestorType=Window}}" 
                                Foreground="White" 
                                BorderBrush="#FFCEEAFF" 
                                BorderThickness="0 0 0 3" 
                                Margin="10 0 15 0"  
                                Width="85"
                                SelectedValue="{Binding DataContext.CompanyName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=Window}}">
                </uc:AutoCompleteBox>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="policyDateTemplate">
            <WrapPanel AllowDrop="True" Orientation="Vertical">
                <TextBlock Text="Policy Date" Margin="10 5 0 0" FontSize="13" Foreground="#FFCEEAFF"></TextBlock>
                <StackPanel Orientation="Horizontal">
                    <DatePicker Margin="10 6 5 5" BorderBrush="#FFCEEAFF" BorderThickness="0 0 0 3" Width="80" Foreground="White"/>
                    <DatePicker Margin="0 6 15 5" BorderBrush="#FFCEEAFF" BorderThickness="0 0 0 3" Width="80" Foreground="White"/>
                </StackPanel>
            </WrapPanel>
        </DataTemplate>
        <template:SearchOptionsSelector x:Key="searchOptionsSelector"
                                    CommonNameTemplate="{StaticResource commonNameTemplate}"
                                    LastNameTemplate="{StaticResource lastNameTemplate}"
                                    FirstNameTemplate="{StaticResource firstNameTemplate}"
                                    EntityTypeTemplate="{StaticResource entityTypeTemplate}"
                                    PolicyNumberTemplate="{StaticResource policyNumberTemplate}"
                                    CompanyNameTemplate="{StaticResource companyNameTemplate}"
                                    PolicyDateTemplate="{StaticResource policyDateTemplate}">
            
        </template:SearchOptionsSelector>

        <Storyboard x:Key="SearchSliderOpen" TargetProperty="Margin">
            <ThicknessAnimation Storyboard.TargetName="SearchSliderPannel" Duration="0:0:0.6">
                <ThicknessAnimation.From>
                    <Thickness Right="450" Top="0" Bottom="0" Left="0"/>
                </ThicknessAnimation.From>
                <ThicknessAnimation.To>
                    <Thickness Left="0" Top="0" Bottom="0" Right="0"/>
                </ThicknessAnimation.To>
            </ThicknessAnimation>
        </Storyboard>
        <Storyboard x:Key="SearchSliderClose" TargetProperty="Margin">
            <ThicknessAnimation Storyboard.TargetName="SearchSliderPannel" Duration="0:0:0.6">
                <ThicknessAnimation.From>
                    <Thickness Left="0" Top="0" Bottom="0" Right="0"/>
                </ThicknessAnimation.From>
                <ThicknessAnimation.To>
                    <Thickness Right="450" Top="0" Bottom="0" Left="0"/>
                </ThicknessAnimation.To>
            </ThicknessAnimation>
        </Storyboard>
        <Storyboard x:Key="IllustrationSliderOpen" TargetProperty="Margin">
            <ThicknessAnimation Storyboard.TargetName="IllustrationSliderPanel" Duration="0:0:0.6">
                <ThicknessAnimation.From>
                    <Thickness Left="525" Top="0" Bottom="0" Right="-525"/>
                </ThicknessAnimation.From>
                <ThicknessAnimation.To>
                    <Thickness Left="0" Top="0" Bottom="0" Right="0"/>
                </ThicknessAnimation.To>
            </ThicknessAnimation>
        </Storyboard>
        <Storyboard x:Key="IllustrationSliderClose" TargetProperty="Margin">
            <ThicknessAnimation Storyboard.TargetName="IllustrationSliderPanel" Duration="0:0:0.6">
                <ThicknessAnimation.From>
                    <Thickness Left="0" Top="0" Bottom="0" Right="0"/>
                </ThicknessAnimation.From>
                <ThicknessAnimation.To>
                    <Thickness Left="525" Top="0" Bottom="0" Right="-525"/>
                </ThicknessAnimation.To>
            </ThicknessAnimation>
        </Storyboard>
        <Storyboard x:Key="IllustrationEditOpen" TargetProperty="Margin">
            <ThicknessAnimation Duration="0:0:0.6" Storyboard.Target="{Binding ElementName=IllustrationEdit}">
                <ThicknessAnimation.From>
                    <Thickness Left="0" Top="525" Bottom="-525" Right="0"/>
                </ThicknessAnimation.From>
                <ThicknessAnimation.To>
                    <Thickness Left="0" Top="0" Bottom="0" Right="0"/>
                </ThicknessAnimation.To>
            </ThicknessAnimation>
        </Storyboard>
        <Storyboard x:Key="IllustrationEditClose" TargetProperty="Margin">
            <ThicknessAnimation Duration="0:0:0.6" Storyboard.Target="{Binding ElementName=IllustrationEdit}">
                <ThicknessAnimation.From>
                    <Thickness Left="0" Top="0" Bottom="0" Right="0"/>
                </ThicknessAnimation.From>
                <ThicknessAnimation.To>
                    <Thickness Left="0" Top="525" Bottom="-525" Right="0"/>
                </ThicknessAnimation.To>
            </ThicknessAnimation>
        </Storyboard>
        <Storyboard x:Key="PolicyEditOpen" TargetProperty="Margin">
            <ThicknessAnimation Duration="0:0:0.6" Storyboard.Target="{Binding ElementName=PolicyEdit}">
                <ThicknessAnimation.From>
                    <Thickness Left="0" Top="525" Bottom="-525" Right="0"/>
                </ThicknessAnimation.From>
                <ThicknessAnimation.To>
                    <Thickness Left="0" Top="0" Bottom="0" Right="0"/>
                </ThicknessAnimation.To>
            </ThicknessAnimation>
        </Storyboard>
        <Storyboard x:Key="PolicyEditClose" TargetProperty="Margin">
            <ThicknessAnimation Duration="0:0:0.6" Storyboard.Target="{Binding ElementName=PolicyEdit}">
                <ThicknessAnimation.From>
                    <Thickness Left="0" Top="0" Bottom="0" Right="0"/>
                </ThicknessAnimation.From>
                <ThicknessAnimation.To>
                    <Thickness Left="0" Top="525" Bottom="-525" Right="0"/>
                </ThicknessAnimation.To>
            </ThicknessAnimation>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonSearchSliderOpen">
            <BeginStoryboard Storyboard="{StaticResource SearchSliderOpen}"></BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonSearchSliderClose">
            <BeginStoryboard Storyboard="{StaticResource SearchSliderClose}"></BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonIllustrationOpen">
            <BeginStoryboard Storyboard="{StaticResource IllustrationSliderOpen}"></BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonIllustrationClose">
            <BeginStoryboard Storyboard="{StaticResource IllustrationSliderClose}"></BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonIllustrationEditClose">
            <BeginStoryboard Storyboard="{StaticResource IllustrationEditClose}"></BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonIllustrationEditSave">
            <BeginStoryboard Storyboard="{StaticResource IllustrationEditClose}"></BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid>
        <Grid x:Name="PolicyMainView">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="450" x:Name="SearchSliderColumn" />
                <ColumnDefinition Width="*" x:Name="PolicyGridColumn"/>
                <ColumnDefinition Width="375" x:Name="PolicyDetailColumn"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0" Grid.Column="0" Background="#FF252627" x:Name="SearchSliderPannel" ShowGridLines="False">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="250"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <DockPanel>
                    <materialDesign:PackIcon Kind="Search" VerticalAlignment="Center" Margin="20" Foreground="White" FontWeight="Bold"></materialDesign:PackIcon>
                    <TextBlock Text="Search" Margin="0 38 10 10" FontSize="16" Foreground="White" ></TextBlock>
                    <Button Background="Transparent" BorderBrush="Transparent" Width="50" HorizontalAlignment="Right" x:Name="ButtonSearchSliderClose" Click="ButtonSearchSliderClose_Click">
                        <materialDesign:PackIcon Kind="ArrowLeftBoldCircleOutline"  VerticalAlignment="Center"  Foreground="White" FontWeight="Bold"></materialDesign:PackIcon>
                    </Button>
                </DockPanel>
                <Grid Grid.Row="1" ShowGridLines="False">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ListView Grid.Row="0" ItemsSource="{Binding SearchOptions, UpdateSourceTrigger=PropertyChanged, IsAsync=True}"  Width="450" x:Name="SearchOptionsList" Height="300" ItemTemplateSelector="{StaticResource searchOptionsSelector}" 
                                  PreviewMouseLeftButtonDown="SearchOptionsList_PreviewMouseLeftButtonDown" PreviewMouseMove="SearchOptionsList_PreviewMouseMove" Drop="SearchOptionsList_Drop" AllowDrop="True">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" Width="450"></WrapPanel>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                    </ListView>
                    <StackPanel Grid.Row="1" Margin="295 10 0 0">
                        <Button Content="Search" Width="85" Command="{Binding DataContext.SearchClientCommand,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" IsDefault="True"></Button>
                    </StackPanel>
                    </Grid>
                </Grid>
                <Grid Grid.Row="2">
                    <DataGrid AutoGenerateColumns="False" x:Name="search" IsReadOnly="True" Background="{x:Null}" GridLinesVisibility="None"
                          ItemsSource="{Binding DataContext.ClientCollection, RelativeSource={RelativeSource AncestorType=Window}}" ColumnHeaderStyle="{StaticResource ClientHeaderStyle}" RowStyle="{StaticResource ClientRowStyle }" 
                          SelectionUnit="FullRow" SelectedItem="{Binding SelectedClient}">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Common Name" Width="105" SortMemberPath="CommonName" CanUserSort="True" HeaderStyle="{StaticResource ClientFirstColumnHeaderStyle }">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=CommonName}" Margin="10 0 10 0" Foreground="White" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Last Name" Width="100" SortMemberPath="LastName" CanUserSort="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=LastName}" Foreground="White" ></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="First Name" Width="90" SortMemberPath="FirstName" CanUserSort="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=FirstName}" Foreground="White"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Entity Type" Width="200" SortMemberPath="ClientType" CanUserSort="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=ClientType}" Foreground="White"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Grid>
            <Grid Grid.Row="0" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="70"/>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0" x:Name="searchBarColumn"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <DockPanel x:Name="SearchBar" Visibility="Collapsed">
                    <materialDesign:PackIcon Kind="Search" VerticalAlignment="Center" Margin="20" FontWeight="Bold"></materialDesign:PackIcon>
                    <TextBlock Text="Search" Margin="0 22 10 10" FontSize="16" ></TextBlock>
                    <Button Background="Transparent" BorderBrush="Transparent" Width="50" x:Name="ButtonSearchSliderOpen" HorizontalAlignment="Left" Click="ButtonSearchSliderOpen_Click">
                        <materialDesign:PackIcon Kind="ArrowRightBoldCircleOutline" VerticalAlignment="Center"  Foreground="Black" FontWeight="Bold"></materialDesign:PackIcon>
                    </Button>
                    <TextBlock Text="|" Margin="0 10 10 10" FontSize="35" Foreground="#FFF0F9FF" FontWeight="Light" Opacity="0.3"></TextBlock>
                </DockPanel>
                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Snowflake" Margin="10 10 0 10" VerticalAlignment="Center"  Foreground="Black" FontWeight="Bold"></materialDesign:PackIcon>
                    <TextBlock Margin="10 22 10 10" FontSize="16" Foreground="Black" Visibility="{Binding IsClientSelected, Converter={StaticResource VisibilityConverter}}">
                        <Run Text="{Binding SelectedClient.ClientType}"/>
                        <Run Text=" : "/>
                        <Run Text="{Binding SelectedClient.CommonName}"/>
                        <Run Text="{Binding SelectedClient.LastName}"/>
                    </TextBlock>
                    <TextBlock Text="Policy Details" Margin="10 22 10 10" FontSize="16" Foreground="Black" Visibility="{Binding IsPolicyDetailVisible, Converter={StaticResource VisibilityConverter}}"/>
                </StackPanel>
                <Grid Grid.Row="1" Margin="10 0 10 10" Grid.ColumnSpan="2">
                    <DataGrid AutoGenerateColumns="True" x:Name="policies" IsReadOnly="False" 
                      ItemsSource="{Binding PolicyCollection, UpdateSourceTrigger=PropertyChanged}" ColumnHeaderStyle="{StaticResource HeaderStyle}" RowStyle="{StaticResource GridRowStyle }"
                      CanUserAddRows="False" SelectionUnit="FullRow" RowHeight="40" SelectedItem="{Binding SelectedPolicy}" 
                      MouseRightButtonUp="Policies_MouseRightButtonUp" AutoGeneratedColumns="Policies_AutoGenerateColumns" ColumnHeaderDragCompleted="policies_ColumnHeaderDragCompleted">
                        <DataGrid.ContextMenu>
                            <ContextMenu x:Name="PolicyContextMenu" DataContext="{Binding Path=PlacementTarget.DataContext, 
                                                               RelativeSource={RelativeSource Self}}" Visibility="Collapsed" >
                                <MenuItem Header="Add column" 
                                        ItemsSource="{Binding ColumnNames}">
                                    <MenuItem.ItemTemplate>
                                        <DataTemplate>
                                            <Button x:Name="btnAddColumn" Content="{Binding}" BorderBrush="Transparent" Background="Transparent" Foreground="Gray" FontWeight="Regular">
                                                <Button.CommandParameter>
                                                    <MultiBinding>
                                                        <MultiBinding.Converter>
                                                            <converters:MultipleParametersConverter/>
                                                        </MultiBinding.Converter>
                                                        <Binding Path="."></Binding>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}" Path="(Grid.Column)" ></Binding>
                                                    </MultiBinding>
                                                </Button.CommandParameter>
                                            </Button>
                                        </DataTemplate>
                                    </MenuItem.ItemTemplate>
                                </MenuItem>
                                <MenuItem Header="Remove" Command="{Binding DataContext.SelectedViewModel.RemoveColumnCommand, 
                                          RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                                </MenuItem>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="" Width="40" HeaderStyle="{StaticResource FirstColumnHeaderStyle }">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Background="Transparent" BorderBrush="Transparent" Width="50" x:Name="ButtonPolicyEditOpen" HorizontalAlignment="Left" Click="ButtonPolicyEditOpen_Click">
                                            <materialDesign:PackIcon Kind="Pencil" VerticalAlignment="Center"  Foreground="Black" FontWeight="Bold"></materialDesign:PackIcon>
                                            <Button.Triggers>
                                                <EventTrigger RoutedEvent="ButtonBase.Click">
                                                    <BeginStoryboard Storyboard="{StaticResource PolicyEditOpen}"></BeginStoryboard>
                                                </EventTrigger>
                                            </Button.Triggers>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <TextBlock Text="No records found" 
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center" 
                           Visibility="{Binding IsNoRecordFound, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" 
                           Style="{StaticResource NoRecordsTextBlock}" />
                </Grid>
            </Grid>
            <Grid Grid.Row="0" Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="70"/>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="2" Background="White" Margin="0 0 10 10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="280"/>
                        <RowDefinition Height="150"/>
                        <RowDefinition Height="175"/>
                        <RowDefinition Height="80"/>
                        <RowDefinition Height="175"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Background="LightGray" >
                        <Button Content="View Policy Illustration" Width="200" Margin="10" x:Name="ButtonIllustrationOpen" Click="ButtonIllustrationOpen_Click" Command="{Binding ViewIllustrationCommand}"/>
                    </StackPanel>
                    <StackPanel Grid.Row="1" Margin="20 10 10 0">
                        <TextBlock Text="Relationships" FontWeight="Bold"/>
                        <DataGrid AutoGenerateColumns="False" x:Name="relationship" IsReadOnly="True" Background="{x:Null}" GridLinesVisibility="None"
                            HorizontalScrollBarVisibility="Auto" MaxWidth="360" VerticalScrollBarVisibility="Auto" MaxHeight="250"
                            ColumnHeaderStyle="{StaticResource RelationshipHeaderStyle}" ItemsSource="{Binding SelectedPolicy.PeoplePolicy}" MinRowHeight="25"
                            SelectionUnit="FullRow">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Category" Width="85" HeaderStyle="{StaticResource RelationshipFirstColumnHeaderStyle}">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Category}" Margin="10 0 10 0" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Name" Width="Auto">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Name}" ></TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="" Width="5" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Relation" Width="Auto" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Relation}"></TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="" Width="5" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Split" Width="Auto">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Split}"></TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Margin="20 10 10 10">
                        <Separator Background="LightGray" Margin="0 10"/>
                        <TextBlock Text="General Notes" FontWeight="Bold" Margin="0 0 0 5"/>
                        <TextBlock Text="{Binding SelectedClient.GeneralNotes}" TextWrapping="Wrap"/>
                    </StackPanel>
                    <Grid Grid.Row="3" Margin="20 10 10 10" ShowGridLines="False">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Separator Background="LightGray" Margin="0 10" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2"/>
                        <TextBlock Text="Policy Notes" FontWeight="Bold" Margin="0 0 0 5" Grid.Column="0" Grid.Row="1"/>
                        <StackPanel Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal">
                            <Button HorizontalContentAlignment="Left" Height="25" Padding="5" Width="25" Command="{Binding EditPolicyNotesCommand}" Visibility="{Binding IsPolicyNotesEditVisible, Converter={StaticResource VisibilityConverter}}">
                                <materialDesign:PackIcon Kind="Pencil" Height="15" Width="15"/>
                            </Button>
                            <Button HorizontalContentAlignment="Left" Height="25" Padding="5" Width="25" Command="{Binding SavePolicyNotesCommand}" Background="#FF57C125" Margin="5 0" BorderBrush="Transparent" Visibility="{Binding IsPolicyNotesSaveVisible, Converter={StaticResource VisibilityConverter}}">
                                <materialDesign:PackIcon Kind="Check" Height="15" Width="15"/>
                            </Button>
                            <Button HorizontalContentAlignment="Left" Height="25" Padding="5" Width="25" Command="{Binding CancelPolicyNotesCommand}" Background="#FFEB7533" BorderBrush="Transparent" Visibility="{Binding IsPolicyNotesSaveVisible, Converter={StaticResource VisibilityConverter}}">
                                <materialDesign:PackIcon Kind="Close" Height="15" Width="15"/>
                            </Button>
                        </StackPanel>
                        <TextBlock Text="{Binding SelectedPolicy.PolicyNotes}" TextWrapping="Wrap" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Visibility="{Binding IsPolicyNotesEditVisible, Converter={StaticResource VisibilityConverter}}"/>
                        <TextBox Text="{Binding SelectedPolicy.PolicyNotes}" TextWrapping="Wrap" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Visibility="{Binding IsPolicyNotesSaveVisible, Converter={StaticResource VisibilityConverter}}" VerticalAlignment="Top"/>
                    </Grid>
                    <StackPanel Grid.Row="4" Margin="10 10 10 10">
                        <Separator Background="LightGray" Margin="0 10"/>
                        <Grid Background="LightBlue" Height="70">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Margin="5">
                                <TextBlock Text="Birthday"/>
                                <TextBlock Text="{Binding SelectedClient.BirthDate, StringFormat='{}{0: MM/dd/yyyy}'}"/>
                            </StackPanel>
                            <StackPanel Grid.Column="1" Margin="5">
                                <TextBlock Text="Smoker" HorizontalAlignment="Center"/>
                                <TextBlock Text="{Binding SelectedClient.Smoker}" HorizontalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Grid.Column="2" Margin="5">
                                <TextBlock Text="Status" HorizontalAlignment="Center"/>
                                <TextBlock Text="{Binding SelectedClient.Status}" HorizontalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Grid.Column="3" Margin="5">
                                <TextBlock Text="SVC Type" HorizontalAlignment="Center"/>
                                <TextBlock Text="{Binding SelectedClient.SVCType}" HorizontalAlignment="Center"/>
                            </StackPanel>
                        </Grid>

                    </StackPanel>
                    <StackPanel Grid.Row="5" Margin="20 10 10 10">
                        <Separator Background="LightGray" Margin="0 10"/>
                        <TextBlock Text="Agents and Splits" FontWeight="Bold" Margin="0 0 0 10"></TextBlock>
                        <ItemsControl ItemsSource="{Binding SelectedPolicy.PolicyAgent}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Rows="4" Columns="2" HorizontalAlignment="Left" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border CornerRadius="15"
                                                BorderBrush="{Binding Agent.Color}"
                                                BorderThickness="1"
                                                Background="{Binding Agent.Color}"
                                                Margin="5">
                                        <Grid Width="100">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="{Binding Agent.FirstName}" Foreground="Black" Margin="5"/>
                                            <TextBlock Grid.Column="1"  Text="{Binding Split, StringFormat='{}{0:#,#.00}'}" Foreground="Black" Margin="5"/>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                    

                </Grid>
            </Grid>
        </Grid>

        <Grid x:Name="IllustrationSliderPanel" Visibility="Collapsed" Background="#FF9BADB8" HorizontalAlignment="Right">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="26"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Background="#00A3FF" VerticalAlignment="Stretch" Margin="0 0 8 0">
                <Button Background="Transparent" BorderBrush="Transparent" Width="30" Padding="0" HorizontalContentAlignment="Left" HorizontalAlignment="Left" 
                        x:Name="ButtonIllustrationClose" Click="ButtonIllustrationClose_Click">
                    <materialDesign:PackIcon Kind="CloseCircleOutline"  VerticalAlignment="Center"  Foreground="White" FontWeight="Bold"></materialDesign:PackIcon>
                </Button>
            </StackPanel>
            <DockPanel Grid.Column="1" Margin="5 0 0 10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="70"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="150"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                            <materialDesign:PackIcon  Kind="LayersTripleOutline"  VerticalAlignment="Center"  Foreground="Black" FontWeight="Bold"></materialDesign:PackIcon>
                            <TextBlock  Text="Policy Illustration" VerticalAlignment="Center" Margin="10 0 0 0" FontSize="16"/>
                        </StackPanel>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 0 0">
                            <TextBlock Text="Policy # : " HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="16" ></TextBlock>
                            <TextBlock Text="{Binding SelectedPolicy.PolicyNumber}" VerticalAlignment="Center" Margin="0 0 20 0" FontSize="16"/>
                            <TextBlock Text="Policy Date : " VerticalAlignment="Center" FontSize="16"></TextBlock>
                            <TextBlock Text="{Binding SelectedPolicy.PolicyDate, StringFormat='{}{0: MMM d, yyyy}'}" FontSize="16" VerticalAlignment="Center" Margin="0 0 20 0"/>
                        </StackPanel>
                        <StackPanel Grid.Column="2"  HorizontalAlignment="Right" Orientation="Vertical" VerticalAlignment="Center">
                            <RadioButton Margin="10,5,10,0" GroupName="DividentScale" IsChecked="True" Command="{Binding DividentScaleFilterCommand}" FontSize="14" CommandParameter="false">Primary</RadioButton>
                            <RadioButton Margin="10,5,10,0" GroupName="DividentScale" Command="{Binding DividentScaleFilterCommand}" FontSize="14" CommandParameter="true">Reduced</RadioButton>
                        </StackPanel>
                    </Grid>
                <DataGrid AutoGenerateColumns="False" x:Name="illustration" IsReadOnly="False" Grid.Row="1" CanUserReorderColumns="False" 
                    ItemsSource="{Binding PolicyIllustrationCollection}" ColumnHeaderStyle="{StaticResource HeaderStyle}" RowStyle="{StaticResource GridRowStyle }" 
                    CanUserAddRows="False" SelectionUnit="FullRow" RowHeight="40" RowHeaderWidth="10" SelectedItem="{Binding SelectedIllustration}">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="" Width="40" HeaderStyle="{StaticResource FirstColumnHeaderStyle }">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Background="Transparent" BorderBrush="Transparent" Width="50" HorizontalAlignment="Left" x:Name="ButtonIllustrationEditOpen" Click="ButtonIllustrationEditOpen_Click">
                                            <materialDesign:PackIcon Kind="Pencil" VerticalAlignment="Center"  Foreground="Black" FontWeight="Bold"></materialDesign:PackIcon>
                                            <Button.Triggers>
                                                <EventTrigger RoutedEvent="ButtonBase.Click">
                                                    <BeginStoryboard Storyboard="{StaticResource IllustrationEditOpen}"></BeginStoryboard>
                                                </EventTrigger>
                                            </Button.Triggers>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Year" Width="80" SortMemberPath="CalendarYear" CanUserSort="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=CalendarYear}" Margin="10 0 10 0"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="AD" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=AnnualDeposit}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="ADA" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=AnnualDepositActual}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="ADR" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=AnnualDepositReprojection}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="CV" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=CashValue}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="CVA" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=CashValueActual}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="CVR" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=CashValueReprojection}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="DB" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=DeathBenefit}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="DBA" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=DeathBenefitActual}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="DBR" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=DeathBenefitReprojection}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="ACB" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=AdjustedCostBase}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="ACBA" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=AdjustedCostBaseActual}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="ACBR" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=AdjustedCostBaseReprojection}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="NCPI" Width="70">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=NCPI}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="NCPIA" Width="70">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=NCPIActual}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="NCPIR" Width="70">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=NCPIReprojection}"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.Row="2" Background="White">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="185"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Margin="20 10 10 10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Client Notes" FontWeight="Bold" Margin="0 0 0 5"/>
                            <StackPanel Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right" Orientation="Horizontal">
                                <Button HorizontalContentAlignment="Left" Height="25" Padding="5" Width="25" Command="{Binding EditClientNotesCommand}" Visibility="{Binding IsClientNotesEditVisible, Converter={StaticResource VisibilityConverter}}">
                                    <materialDesign:PackIcon Kind="Pencil" Height="15" Width="15"/>
                                </Button>
                                <Button HorizontalContentAlignment="Left" Height="25" Padding="5" Width="25" Command="{Binding SaveClientNotesCommand}" Background="#FF57C125" Margin="5 0" BorderBrush="Transparent" Visibility="{Binding IsClientNotesSaveVisible, Converter={StaticResource VisibilityConverter}}">
                                    <materialDesign:PackIcon Kind="Check" Height="15" Width="15"/>
                                </Button>
                                <Button HorizontalContentAlignment="Left" Height="25" Padding="5" Width="25" Command="{Binding CancelClientNotesCommand}" Background="#FFEB7533" BorderBrush="Transparent" Visibility="{Binding IsClientNotesSaveVisible, Converter={StaticResource VisibilityConverter}}">
                                    <materialDesign:PackIcon Kind="Close" Height="15" Width="15"/>
                                </Button>
                            </StackPanel>
                            <TextBlock Text="{Binding SelectedPolicy.ClientNotes}" TextWrapping="Wrap" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Visibility="{Binding IsClientNotesEditVisible, Converter={StaticResource VisibilityConverter}}"/>
                            <TextBox Text="{Binding SelectedPolicy.ClientNotes}" TextWrapping="Wrap" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Visibility="{Binding IsClientNotesSaveVisible, Converter={StaticResource VisibilityConverter}}" VerticalAlignment="Top"/>
                        </Grid>
                        <Grid Grid.Column="1" Margin="20 10 10 10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Internal Notes" FontWeight="Bold" Margin="0 0 0 5" Grid.Column="0" Grid.Row="0"/>
                            <StackPanel Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right" Orientation="Horizontal">
                                <Button HorizontalContentAlignment="Left" Height="25" Padding="5" Width="25" Command="{Binding EditInternalNotesCommand}" Visibility="{Binding IsInternalNotesEditVisible, Converter={StaticResource VisibilityConverter}}">
                                    <materialDesign:PackIcon Kind="Pencil" Height="15" Width="15"/>
                                </Button>
                                <Button HorizontalContentAlignment="Left" Height="25" Padding="5" Width="25" Command="{Binding SaveInternalNotesCommand}" Background="#FF57C125" Margin="5 0" BorderBrush="Transparent" Visibility="{Binding IsInternalNotesSaveVisible, Converter={StaticResource VisibilityConverter}}">
                                    <materialDesign:PackIcon Kind="Check" Height="15" Width="15"/>
                                </Button>
                                <Button HorizontalContentAlignment="Left" Height="25" Padding="5" Width="25" Command="{Binding CancelInternalNotesCommand}" Background="#FFEB7533" BorderBrush="Transparent" Visibility="{Binding IsInternalNotesSaveVisible, Converter={StaticResource VisibilityConverter}}">
                                    <materialDesign:PackIcon Kind="Close" Height="15" Width="15"/>
                                </Button>
                            </StackPanel>
                            <TextBlock Text="{Binding SelectedPolicy.InternalNotes}" TextWrapping="Wrap" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Visibility="{Binding IsInternalNotesEditVisible, Converter={StaticResource VisibilityConverter}}"/>
                            <TextBox Text="{Binding SelectedPolicy.InternalNotes}" TextWrapping="Wrap" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Visibility="{Binding IsInternalNotesSaveVisible, Converter={StaticResource VisibilityConverter}}" VerticalAlignment="Top"/>
                        </Grid>
                        <StackPanel Grid.Column="2">
                            <StackPanel Orientation="Horizontal" Margin="10 50 0 0">
                                <TextBlock Text="Revised By: "/>
                                <TextBlock Text="{Binding SelectedIllustration.ModifiedBy}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10 20 0 0">
                                <TextBlock Text="Dated : "/>
                                <TextBlock Text="{Binding SelectedIllustration.ModifiedDate}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Grid>
            </DockPanel>
        </Grid>

        <Grid x:Name="IllustrationEdit" Visibility="Collapsed" Background="White" Height="500" Width="500" Opacity="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition/>
                <RowDefinition Height="250"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Margin="50 25" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="Edit Illustration Details" FontWeight="Bold" VerticalAlignment="Center"/>
                <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="Cancel" Margin="10 0" x:Name="ButtonIllustrationEditClose" Click="ButtonIllustrationEditClose_Click"/>
                    <Button Content="Save" Command="{Binding SaveIllustrationCommand}" x:Name="ButtonIllustrationEditSave" Click="ButtonIllustrationEditClose_Click"/>
                </StackPanel>
            </Grid>
            <Grid Margin="50 5" Grid.Row="1" Grid.Column="0">
                <Grid Width="250" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Margin="0 0 40 0">
                        <TextBlock Text="Year"/>
                        <TextBox Text="{Binding SelectedIllustration.CalendarYear}" IsEnabled="False"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1">
                        <TextBlock Text="Policy #"/>
                        <TextBox Text="{Binding SelectedPolicy.PolicyNumber}" IsEnabled="False"/>
                    </StackPanel>
                </Grid>
            </Grid>
            <Grid Margin="50 5 50 20" Grid.Row="2" Grid.Column="0" Background="#FFF8F8F8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="Original" Margin="0 5" VerticalAlignment="Center"/>
                <StackPanel Grid.Column="1" Grid.Row="0" Margin="0 0 10 0">
                    <TextBlock Text="Annual Deposit" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.AnnualDeposit}" IsEnabled="False"/>
                </StackPanel>
                <StackPanel Grid.Column="2" Grid.Row="0" Margin="0 0 10 0">
                    <TextBlock Text="Cash Value" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.CashValue}" IsEnabled="False"/>
                </StackPanel>
                <StackPanel Grid.Column="3" Grid.Row="0" Margin="0 0 10 0">
                    <TextBlock Text="Death Benefit" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.DeathBenefit}" IsEnabled="False"/>
                </StackPanel>
                <StackPanel Grid.Column="4" Grid.Row="0" Margin="0 0 10 0">
                    <TextBlock Text="Adjusted Cost Base" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.AdjustedCostBase}" IsEnabled="False"/>
                </StackPanel>
                <StackPanel Grid.Column="5" Grid.Row="0" Margin="0 0 10 0">
                    <TextBlock Text="NCPI" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.NCPI}" IsEnabled="False"/>
                </StackPanel>


                <TextBlock Grid.Column="0" Grid.Row="1" Text="Actual" Margin="0 5" VerticalAlignment="Center"/>
                <StackPanel Grid.Column="1" Grid.Row="1" Margin="0 0 10 0">
                    <TextBlock Text="Annual Deposit" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.AnnualDepositActual, StringFormat='{}{0:#,0.00}'}"/>
                </StackPanel>
                <StackPanel Grid.Column="2" Grid.Row="1" Margin="0 0 10 0">
                    <TextBlock Text="Cash Value" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.CashValueActual, StringFormat='{}{0:#,0.00}'}"/>
                </StackPanel>
                <StackPanel Grid.Column="3" Grid.Row="1" Margin="0 0 10 0">
                    <TextBlock Text="Death Benefit" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.DeathBenefitActual, StringFormat='{}{0:#,0.00}'}"/>
                </StackPanel>
                <StackPanel Grid.Column="4" Grid.Row="1" Margin="0 0 10 0">
                    <TextBlock Text="Adjusted Cost Base" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.AdjustedCostBaseActual, StringFormat='{}{0:#,0.00}'}"/>
                </StackPanel>
                <StackPanel Grid.Column="5" Grid.Row="1" Margin="0 0 10 0">
                    <TextBlock Text="NCPI" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.NCPIActual, StringFormat='{}{0:#,0.00}'}"/>
                </StackPanel>


                <TextBlock Grid.Column="0" Grid.Row="2" Text="Reprojection" Margin="0 5" VerticalAlignment="Center"/>
                <StackPanel Grid.Column="1" Grid.Row="2" Margin="0 0 10 0">
                    <TextBlock Text="Annual Deposit" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.AnnualDepositReprojection, StringFormat='{}{0:#,0.00}'}"/>
                </StackPanel>
                <StackPanel Grid.Column="2" Grid.Row="2" Margin="0 0 10 0">
                    <TextBlock Text="Cash Value" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.CashValueReprojection, StringFormat='{}{0:#,0.00}'}"/>
                </StackPanel>
                <StackPanel Grid.Column="3" Grid.Row="2" Margin="0 0 10 0">
                    <TextBlock Text="Death Benefit" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.DeathBenefitReprojection, StringFormat='{}{0:#,0.00}'}"/>
                </StackPanel>
                <StackPanel Grid.Column="4" Grid.Row="2" Margin="0 0 10 0">
                    <TextBlock Text="Adjusted Cost Base" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.AdjustedCostBaseReprojection, StringFormat='{}{0:#,0.00}'}"/>
                </StackPanel>
                <StackPanel Grid.Column="5" Grid.Row="2" Margin="0 0 10 0">
                    <TextBlock Text="NCPI" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedIllustration.NCPIReprojection, StringFormat='{}{0:#,0.00}'}"/>
                </StackPanel>
            </Grid>
        </Grid>

        <Grid x:Name="PolicyEdit" Visibility="Collapsed" Background="White" Height="500" Width="500" Opacity="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition Height="330"/>
            </Grid.RowDefinitions>
            <Grid Margin="50 25" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="Edit Policy Detail" FontWeight="Bold" VerticalAlignment="Center"/>
                <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="Cancel" Command="{Binding CancelPolicyCommand}" Margin="10 0" x:Name="ButtonPolicyEditClose" Click="ButtonPolicyEditClose_Click"/>
                    <Button Content="Save" Command="{Binding SavePolicyCommand}" x:Name="ButtonPolicyEditSave" Click="ButtonPolicyEditClose_Click"/>
                </StackPanel>
            </Grid>
            <Grid Margin="50 5 50 20" Grid.Row="2" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Margin="0 0 40 0">
                    <TextBlock Text="Policy #"/>
                    <TextBox Text="{Binding SelectedPolicy.PolicyNumber}" MaxLength="15"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Grid.ColumnSpan="2">
                    <TextBlock Text="Company Name"/>
                    <ComboBox ItemsSource="{Binding CompanyCollection}" 
                              SelectedValue="{Binding SelectedPolicyCompany}" 
                              DisplayMemberPath="Description" 
                              Foreground="Black"
                              FontSize="13" 
                              Margin="0 0 17 0" 
                              Style="{StaticResource EditPolicyComboStyle}">
                    </ComboBox>
                </StackPanel>

                <StackPanel Grid.Column="0" Grid.Row="1" Margin="0 0 10 0">
                    <TextBlock Text="Face Amount" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedPolicy.FaceAmount}"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Grid.Row="1" Margin="0 0 10 0">
                    <TextBlock Text="Policy Date" Margin="0 5"/>
                    <DatePicker SelectedDate="{Binding Path=SelectedPolicy.PolicyDate, StringFormat='{}{0: MMM d, yyyy}'}"></DatePicker>
                </StackPanel>
                <StackPanel Grid.Column="2" Grid.Row="1" Margin="0 0 10 0">
                    <TextBlock Text="Plan Code" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedPolicy.PlanCode}" MaxLength="20"/>
                </StackPanel>

                <StackPanel Grid.Column="0" Grid.Row="2" Margin="0 0 10 0">
                    <TextBlock Text="Payment" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedPolicy.Payment}"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Grid.Row="2" Margin="0 0 10 0">
                    <TextBlock Text="Placement Date" Margin="0 5"/>                    
                    <DatePicker SelectedDate="{Binding Path=SelectedPolicy.PlacedOn, StringFormat='{}{0: MMM d, yyyy}'}"></DatePicker>
                </StackPanel>
                <StackPanel Grid.Column="2" Grid.Row="2" Margin="0 0 10 0">
                    <TextBlock Text="Rating" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedPolicy.Rating}" MaxLength="20"/>
                </StackPanel>

                <StackPanel Grid.Column="0" Grid.Row="3" Margin="0 0 10 0">
                    <TextBlock Text="Currency" Margin="0 5"/>
                    <ComboBox ItemsSource="{Binding CurrencyCollection}" 
                              SelectedValue="{Binding SelectedPolicyCurrency}" 
                              DisplayMemberPath="Description" 
                              Foreground="Black" 
                              FontSize="13" 
                              Margin="0 0 17 0" 
                              Style="{StaticResource EditPolicyComboStyle}">
                    </ComboBox>
                </StackPanel>
                <StackPanel Grid.Column="1" Grid.Row="3" Margin="0 0 10 0">
                    <TextBlock Text="Reprojection Date" Margin="0 5"/>
                    <DatePicker SelectedDate="{Binding Path=SelectedPolicy.ReprojectedOn, StringFormat='{}{0: MMM d, yyyy}'}"></DatePicker>
                </StackPanel>
                <StackPanel Grid.Column="2" Grid.Row="3" Margin="0 0 10 0">
                    <TextBlock Text="Class" Margin="0 5"/>
                    <TextBox Text="{Binding SelectedPolicy.Class}" MaxLength="10"/>
                </StackPanel>

                <StackPanel Grid.Column="0" Grid.Row="4" Margin="0 0 10 0">
                    <TextBlock Text="Status" Margin="0 5"/>
                    <ComboBox ItemsSource="{Binding StatusTypeCollection}" 
                              SelectedValue="{Binding SelectedPolicyStatus}" 
                              DisplayMemberPath="Description" 
                              Foreground="Black" 
                              FontSize="13" 
                              Margin="0 0 17 0" 
                              Style="{StaticResource EditPolicyComboStyle}">
                    </ComboBox>
                </StackPanel>
                <StackPanel Grid.Column="1" Grid.Row="4" Margin="0 0 10 0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="50"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Column="0" Grid.Row="0">
                            <TextBlock Text="Frequency" Margin="0 5"/>
                            <ComboBox ItemsSource="{Binding FrequencyTypeCollection}" 
                                      SelectedValue="{Binding SelectedPolicyFrequencyType}" 
                                      DisplayMemberPath="Description" 
                                      Foreground="Black" 
                                      FontSize="13" 
                                      Margin="0 0 17 0" 
                                      Style="{StaticResource EditPolicyComboStyle}">
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Grid.Column="2" Grid.Row="0">
                            <TextBlock Text="Age" Margin="0 5"/>
                            <TextBox Text="{Binding SelectedPolicy.Age}" MaxLength="2"/>
                        </StackPanel>
                    </Grid>
                </StackPanel>
                <StackPanel Grid.Column="2" Grid.Row="4" Margin="0 0 10 0">
                    <TextBlock Text="Type" Margin="0 5"/>
                    <ComboBox ItemsSource="{Binding PolicyTypeCollection}" 
                              SelectedValue="{Binding SelectedPolicyType}" 
                              DisplayMemberPath="Description" 
                              Foreground="Black" 
                              FontSize="13" 
                              Margin="0 0 17 0" 
                              Style="{StaticResource EditPolicyComboStyle}">
                    </ComboBox>
                </StackPanel>
            </Grid>
        </Grid>

    </Grid>
</UserControl>
